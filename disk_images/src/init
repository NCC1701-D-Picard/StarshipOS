#!/bin/bash

# Function for rescue shell in case of critical failures
rescue_shell() {
    echo "An error occurred. Dropping to emergency shell..."
    exec /bin/bash
}

# Mount essential filesystems
echo "Starting StarshipOS..."
mount -t proc proc /proc || rescue_shell
mount -t sysfs sys /sys || rescue_shell
#mount -t devtmpfs dev /dev || rescue_shell

# Set up /dev/console for early boot logging
if [ ! -c /dev/console ]; then
    echo "Setting up /dev/console..."
    mknod /dev/console c 5 1 || rescue_shell
    chmod 600 /dev/console
fi

# Set up /dev/sda (or the root block device)
if [ ! -b /dev/sda ]; then
    echo "Setting up /dev/vda..."
    mknod /dev/sda2 b 253 0 || rescue_shell
fi

# Start the Java-based Init system
echo "Launching StarshipOS Init..."
#exec /bin/bash
#KERNEL_CMDLINE=$(cat /proc/cmdline)
if [[ "$KERNEL_CMDLINE" == *"--debug"* ]]; then
    echo "Debug mode enabled. Starting with remote debugger on port 5005..." >> /dev/console
    exec /java/bin/java -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005 -jar /sbin/init.jar
else
    echo "Starting without debugger..." >> /dev/console
    exec /java/bin/java -jar /sbin/init.jar
fi

